!function(a,b){b.Player.registerExtension("displays",{initialize:function(){b.util.bindAll(this,["resize"])},ready:function(){var c=this;this.displays=[],this.$container.find(".smile-display").each(function(){var d=a(this).dataObject("smile"),e="Display",f=b.Display;d.track?(d.display&&(e="Display"+b.util.capitalize(d.display)),f=b[e],f?(d.track=c.getTrackById(d.track)||c.getTrackById(d.track,!0),d.container=a(this),d.player=c,c.displays.push(new f(d))):console.warn("Smile display expects valid display type: smile."+e+" not found")):console.warn("Smile display expects track parameter")})},resize:function(){a.each(this.displays||[],function(a,b){b.resize&&b.resize()})}}),b.Display=function(c){if(!c.container)throw new Error("Display needs container");this.$container=a(c.container),this.$container[0].smileDisplay=this,this.player=c.player,this.cues={},this.visibleOnCue=c.visibleOnCue||!1,this.toggleDisplay="undefined"==typeof c.toggleDisplay?!0:!!c.toggleDisplay,this.visibleOnCue&&this.$container.hide(),this.onlyShim=c.onlyShim||!1,this.autoLanguage="undefined"==typeof c.autoLanguage?!0:c.autoLanguage,b.util.bindAll(this,["render","onModeChange","onCueChange"]),c.track&&this.setTrack(c.track)},a.extend(b.Display.prototype,EventDispatcher.prototype,{setTrack:function(a){var b=!this.onlyShim||"native"!=this.player.media.pluginType||window.TextTrack.shim;this.track&&this.unhookTrack(),this.cues={},this.track=a,b&&(this.track.ready(this.render),this.hookTrack(),this.onCueChange())},hookTrack:function(){this.track.addEventListener("cuechange",this.onCueChange),this.track.addEventListener("modechange",this.onModeChange)},unhookTrack:function(){this.track.removeEventListener("cuechange",this.onCueChange),this.track.removeEventListener("modechange",this.onModeChange)},render:function(a,c){{var d;this.player.media.currentTime}if("disabled"!=this.track.mode){for(a=a||0;a<(c||this.track.cues.length);a+=1)d=this.track.cues[a],this.cues[d.id]||(this.cues[d.id]=this.renderCue(d));b.Display.hookTimeLinkEvents(this.$container,this.player)}},renderCue:function(b){return{el:a("<div>").addClass("smile-cue").append(b.text.replace("\n","<br/>")).attr("id",this.track.id+"-cue-"+b.id).hide().appendTo(this.$container)}},onModeChange:function(){if("showing"==this.track.mode||"hidden"==this.track.mode?this.$container.show():this.$container.hide(),this.autoLanguage&&"disabled"==this.track.mode){var a=this,b=this.track.id.split("-"),c=b.slice(0,b.length-1).join("-");setTimeout(10,function(){a.setTrack(a.player.getTrackById(c,!0))})}else this.render()},onCueChange:function(){var b=this.track.id,c=!1,d=this.toggleDisplay,e=a.map(this.track.activeCues||[],function(a){return b+"-cue-"+a.id});this.visibleOnCue&&this.$container[e.length?"show":"hide"](),this.$container.find(".smile-cue").each(function(){c=e.indexOf(a(this).attr("id"))>-1,a(this).toggleClass("active",c),d&&a(this).toggle(c)})},resize:function(){},getRatio:function(){return 4/3}}),b.Display.hookTimeLinkEvents=function(b,c){b.find("*[data-time]").each(function(){var b=a(this),d=parseFloat(b.attr("data-time"))+.1;b.on("click",function(a){a.preventDefault(),c.media.setCurrentTime(d)})})},b.DisplaySlides=function(a){b.Display.apply(this,[a]),this._ratio=4/3},a.extend(b.DisplaySlides.prototype,b.Display.prototype,{renderCue:function(c){var d=JSON.parse(c.text),e=b.Display.prototype.renderCue.apply(this,[c]);return e.el.empty().append(a("<img>").attr({src:d.images[0].src,title:d.title})),e},render:function(){b.Display.prototype.render.apply(this);for(var a,c=[],d=0;d<this.track.cues.length;d+=1)a=JSON.parse(this.track.cues[d].text),a.images&&a.images.length&&a.images[0].width&&a.images[0].height&&c.push(a.images[0].width/a.images[0].height);c.length&&(c.sort(function(a,b){return a-b}),this._ratio=c[Math.floor(c.length/2)])},getRatio:function(){return this._ratio}})}(jQuery,smile);